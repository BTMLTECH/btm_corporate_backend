"""Tour package and package payment model modification

Revision ID: 4056538a77d1
Revises: 6ed9d53eb55c
Create Date: 2025-01-20 11:09:37.881841

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from app.model.personal_package_payment import PackagePaymentStatusTypeEnum
from app.model.tour_package import TourPackagePaymentStatusType, TourPackagePaymentStatusTypeEnum

# revision identifiers, used by Alembic.
revision: str = '4056538a77d1'
down_revision: Union[str, None] = '6ed9d53eb55c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    PackagePaymentStatusTypeEnum.create(op.get_bind(), checkfirst=True)
    TourPackagePaymentStatusTypeEnum.create(op.get_bind(), checkfirst=True)
    op.drop_constraint('fk_personal_package_payment_tour_package', 'personal_package_payment', type_='foreignkey')
    op.drop_constraint('fk_tour_package_payment', 'user_tour_packages', type_='foreignkey')

    # Now you can modify or drop the tables
    op.alter_column(
        'personal_package_payment', 
        'tour_package_id', 
        type_=sa.UUID(), 
        postgresql_using='tour_package_id::uuid'
    )

    # Recreate the foreign key constraints
    op.create_foreign_key(
        'fk_personal_package_payment_tour_package',
        'personal_package_payment', 
        'user_tour_packages', 
        ['tour_package_id'], 
        ['id'],
        deferrable=True,
        initially='deferred'
    )
    op.create_foreign_key(
        'fk_tour_package_payment',
        'user_tour_packages', 
        'personal_package_payment', 
        ['payment_id'], 
        ['id'],
        deferrable=True,
        initially='deferred'
    )

def downgrade():
    # Drop the foreign key constraints first
    op.drop_constraint('fk_personal_package_payment_tour_package', 'personal_package_payment', type_='foreignkey')
    op.drop_constraint('fk_tour_package_payment', 'user_tour_packages', type_='foreignkey')

    # Revert the column type
    op.alter_column(
        'personal_package_payment', 
        'tour_package_id', 
        type_=sa.String(), 
        postgresql_using='tour_package_id::text'
    )

    # Recreate the foreign key constraints
    op.create_foreign_key(
        'fk_personal_package_payment_tour_package',
        'personal_package_payment', 
        'user_tour_packages', 
        ['tour_package_id'], 
        ['id'],
        deferrable=True,
        initially='deferred'
    )
    op.create_foreign_key(
        'fk_tour_package_payment',
        'user_tour_packages', 
        'personal_package_payment', 
        ['payment_id'], 
        ['id'],
        deferrable=True,
        initially='deferred'
    )
    PackagePaymentStatusTypeEnum.drop(op.get_bind(), checkfirst=True)
    TourPackagePaymentStatusTypeEnum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
